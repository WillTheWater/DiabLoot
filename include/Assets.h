#pragma once

namespace TEXTURES
{
	enum TEXTURE
	{
		MAINMENU,
		MAINMENUTITLE,
		WIDE_BUTTON,
		INVENTORY_BUTTON,
		MUTE_BUTTON,
		UPGRADE_BUTTON,
		SORT_BUTTON,
		CLOSE_BUTTON,
#ifdef _WIN32
		MINI_BUTTON,
#endif
		INFO_BUTTON,
		INVENTORY,
		WINSCREEN,
		CHESTCLOSED,
		CHESTOPENED,
		FIRE,
		GHEED,
		MAP_ONE,
		MAP_TWO,
		MAP_THREE,
		MAP_FOUR,
		MAP_FIVE,
		MAP_SIX,
		MAP_SEVEN,
		MAP_EIGHT,
		MAP_NINE,
		MAP_TEN,
		MAP_ELEVEN,
		MAP_TWELVE,
		MAP_THIRTEEN,
		KEY,
		AMULET1,
		AMULET2,
		AMULET3,
		CHARM1,
		CHARM2,
		CHARM3,
		REJUV_POTION,
		FULL_REJUV_POTION,
		ANTIDOTE,
		OIL_POTION,
		STAMINA_POTION,
		SUPER_HEALING_POTION,
		SUPER_MANA_POTION,
		THAWING_POTION,
		RANCIDGAS_POTION,
		AMETHYST_P,
		AMETHYST_F,
		DIAMOND_P,
		DIAMOND_F,
		EMERALD_P,
		EMERALD_F,
		RUBY_P,
		RUBY_F,
		SAPPHIRE_P,
		SAPPHIRE_F,
		TOPAZ_P,
		TOPAZ_F,
		SKULL_P,
		SKULL_F,
		JEWEL_1,
		JEWEL_2,
		JEWEL_3,
		JEWEL_4,
		JEWEL_5,
		JEWEL_6,
		RING1,
		RING2,
		RING3,
		TPSCROLL,
		IDSCROLL,
		ANNIHILUS,
		WORLDSTONE_SHARD,
		GOLD_SMALL,
		GOLD_MEDIUM,
		GOLD_LARGE,
		ELRUNE,
		ELDRUNE,
		TIRRUNE,
		NEFRUNE,
		ETHRUNE,
		ITHRUNE,
		TALRUNE,
		RALRUNE,
		ORTRUNE,
		THULRUNE,
		AMNRUNE,
		SOLRUNE,
		SHAELRUNE,
		DOLRUNE,
		HELRUNE,
		IORUNE,
		LUMRUNE,
		KORUNE,
		FALRUNE,
		LEMRUNE,
		PULRUNE,
		UMRUNE,
		MALRUNE,
		ISTRUNE,
		GULRUNE,
		VEXRUNE,
		OHMRUNE,
		LORUNE,
		SURRUNE,
		BERRUNE,
		JAHRUNE,
		CHAMRUNE,
		ZODRUNE,
		PARTICLE,
		GLOW,
		RAIN_FG,
		RAIN_BG,
		MAX_TEXTURES
	};
}

namespace SPRITES
{
	enum SPRITE
	{
		MAINMENU,
		MAINMENUTITLE,
		WIDE_BUTTON,
		INVENTORY_BUTTON,
		MUTE_BUTTON,
		UPGRADE_BUTTON,
		SORT_BUTTON,
		CLOSE_BUTTON,
#ifdef _WIN32
		MINI_BUTTON,
#endif
		INFO_BUTTON,
		INVENTORY,
		WINSCREEN,
		CHESTCLOSED,
		CHESTOPENED,
		FIRE,
		GHEED,
		MAP_ONE,
		MAP_TWO,
		MAP_THREE,
		MAP_FOUR,
		MAP_FIVE,
		MAP_SIX,
		MAP_SEVEN,
		MAP_EIGHT,
		MAP_NINE,
		MAP_TEN,
		MAP_ELEVEN,
		MAP_TWELVE,
		MAP_THIRTEEN,
		KEY,
		AMULET1,
		AMULET2,
		AMULET3,
		AMULET_UNIQ1,
		AMULET_UNIQ2,
		AMULET_UNIQ3,
		CHARM1,
		CHARM2,
		CHARM3,
		REJUV_POTION,
		FULL_REJUV_POTION,
		ANTIDOTE,
		OIL_POTION,
		STAMINA_POTION,
		SUPER_HEALING_POTION,
		SUPER_MANA_POTION,
		THAWING_POTION,
		RANCIDGAS_POTION,
		AMETHYST_P,
		AMETHYST_F,
		DIAMOND_P,
		DIAMOND_F,
		EMERALD_P,
		EMERALD_F,
		RUBY_P,
		RUBY_F,
		SAPPHIRE_P,
		SAPPHIRE_F,
		TOPAZ_P,
		TOPAZ_F,
		SKULL_P,
		SKULL_F,
		JEWEL_1,
		JEWEL_2,
		JEWEL_3,
		JEWEL_4,
		JEWEL_5,
		JEWEL_6,
		RING1,
		RING2,
		RING3,
		RING_UNIQ1,
		RING_UNIQ2,
		RING_UNIQ3,
		TPSCROLL,
		IDSCROLL,
		ANNIHILUS,
		WORLDSTONE_SHARD,
		GOLD_SMALL,
		GOLD_MEDIUM,
		GOLD_LARGE,
		ELRUNE,
		ELDRUNE,
		TIRRUNE,
		NEFRUNE,
		ETHRUNE,
		ITHRUNE,
		TALRUNE,
		RALRUNE,
		ORTRUNE,
		THULRUNE,
		AMNRUNE,
		SOLRUNE,
		SHAELRUNE,
		DOLRUNE,
		HELRUNE,
		IORUNE,
		LUMRUNE,
		KORUNE,
		FALRUNE,
		LEMRUNE,
		PULRUNE,
		UMRUNE,
		MALRUNE,
		ISTRUNE,
		GULRUNE,
		VEXRUNE,
		OHMRUNE,
		LORUNE,
		SURRUNE,
		BERRUNE,
		JAHRUNE,
		CHAMRUNE,
		ZODRUNE,
		PARTICLE,
		GLOW,
		RAIN_FG,
		RAIN_BG,
		MAX_SPRITES
	};

}

namespace ANIMATE
{
	enum FIRE
	{
		SMALL_FIRE,
		MEDIUM_FIRE,
		LARGE_FIRE,
		MAX_FIRE_SIZES
	};
}

namespace FONTS
{
	enum FONT
	{
		BOLD,
		LIGHT,
		MAX_FONTS
	};
	inline int CHARACTER_SIZE_NORMAL = 20;
	inline int CHARACTER_SIZE_BUTTONS = 45;
	inline float PADDING = 8.f;
	inline float ORIGIN_YOFFSET = -5.f;
	inline float SFTEXT_RENDER_YOFFSET = -10.f;
}

namespace IMAGES
{
	enum IMAGE
	{
		DEFAULT_CURSOR,
		CLOSED_CURSOR,
		ICON,
		MAX_IMAGES
	};
}

namespace SOUNDBUFFERS
{
	enum SOUNDBUFFER
	{
		BUTTON_DOWN_SB,
		CHEST_OPEN_SB,
		ITEM_PICKUP_SB,
		ITEM_FLIP_SB,
		AMULET_DROP_SB,
		CHARM_DROP_SB,
		GEM_DROP_SB,
		SKULL_DROP_SB,
		GOLD_DROP_SB,
		JEWEL_DROP_SB,
		KEY_DROP_SB,
		RING_DROP_SB,
		RUNE_DROP_SB,
		SCROLL_DROP_SB,
		FIRE_SB,
		TOWN_SB,
		RAIN_SB,
		THUNDER_1_SB,
		THUNDER_2_SB,
		THUNDER_3_SB,
		FIREWORKS_SB,
		FAREWELL_SB,
		GOODTOSEEYOU_SB,
		HAPPY_SB,
		INSULT_SB,
		INTRO_SB,
		LAUGH_SB,
		MAX_SOUNDSBUFFERS
	};
}

namespace PLAYSOUND
{
	enum PLAYSOUND
	{
		BUTTON_DOWN,
		OPEN_CHEST,
		ITEM_PICKUP,
		ITEM_FLIP,
		AMULET_DROP,
		CHARM_DROP,
		GEM_DROP,
		SKULL_DROP,
		GOLD_DROP,
		JEWEL_DROP,
		KEY_DROP,
		RING_DROP,
		RUNE_DROP,
		SCROLL_DROP,
		FIRE,
		TOWN,
		RAIN,
		THUNDER_1,
		THUNDER_2,
		THUNDER_3,
		FIREWORKS,
		FAREWELL,
		GOODTOSEEYOU,
		HAPPY,
		INSULT,
		INTRO,
		LAUGH,
		MAX_SOUNDS
	};

	inline float GHEED_VOLUME = 30.f; 
}

namespace MUSIC
{
	enum PLAYMUSIC
	{
		INTRO,
		TRISTRAM,
		CRYPT,
		DIABLO,
		KURAST,
		LUTGHOLEIN,
		HARROGATH,
		HAREM,
		MAX_MUSIC_FILES
	};
}

namespace AUDIO_MUTE
{
	enum class AUDIOSTATE
	{
		MUTE_ALL,
		MUTE_MUSIC,
		UNMUTED
	};
}

namespace BUTTONS
{
	enum BUTTON_TEXT
	{
		START,
		NEW_GAME,
		LOAD_GAME,
		EXIT,
		NEXT_LEVEL,
		OPEN_INVENTORY,
		EXIT_PLAY,
		MAX_BUTTONS
	};
	enum BUTTON_TYPE
	{
		WIDE,
		SQUARE,
		MUTE,
		UPGRADE,
		SORT,
		CLOSE,
#ifdef _WIN32
		MINI,
#endif
		INFO,
		MAX_TYPES
	};

	enum BUTTON_STATE
	{
		IDLE,
		HOVER,
		CLICK,
		MAX_STATES
	};

	enum BUTTON_ID
	{
		START_ID,
		NEW_GAME_ID,
		LOAD_GAME_ID,
		EXIT_ID,
		NEXT_LEVEL_ID,
		INVENTORY_ID,
		OPEN_INVENTORY_ID,
		EXIT_PLAY_ID,
		MUTE_BUTTON_ID,
		UPGRADE_BUTTON_ID,
		SORT_BUTTON_ID,
		CLOSE_BUTTON_ID,
#ifdef _WIN32
		MINI_BUTTON_ID,
#endif
		INFO_BUTTON_ID,
		MAX_BUTTONS_ID
	};
}

namespace LEVELS
{
	enum LEVEL
	{
		LEVEL_ONE,
		LEVEL_TWO,
		LEVEL_THREE,
		LEVEL_FOUR,
		LEVEL_FIVE,
		LEVEL_SIX,
		LEVEL_SEVEN,
		LEVEL_EIGHT,
		LEVEL_NINE,
		LEVEL_TEN,
		LEVEL_ELEVEN,
		LEVEL_TWELVE,
		LEVEL_THIRTEEN,
		MAX_LEVELS
	};

	enum UPGRADE
	{
		ONE_CHEST,
		TWO_CHEST,
		THREE_CHEST,
		FOUR_CHEST,
		MAX_UPGRADES
	};
}

namespace ITEMID
{
	enum ITEM
	{
		GOLD,
		KEY,
		AMULET1,
		AMULET2,
		AMULET3,
		AMULET_UNIQ1,
		AMULET_UNIQ2,
		AMULET_UNIQ3,
		CHARM1,
		CHARM2,
		CHARM3,
		REJUV_POTION,
		FULL_REJUV_POTION,
		ANTIDOTE,
		OIL_POTION,
		STAMINA_POTION,
		SUPER_HEALING_POTION,
		SUPER_MANA_POTION,
		THAWING_POTION,
		RANCIDGAS_POTION,
		AMETHYST_P,
		AMETHYST_F,
		DIAMOND_P,
		DIAMOND_F,
		EMERALD_P,
		EMERALD_F,
		RUBY_P,
		RUBY_F,
		SAPPHIRE_P,
		SAPPHIRE_F,
		TOPAZ_P,
		TOPAZ_F,
		SKULL_P,
		SKULL_F,
		JEWEL_1,
		JEWEL_2,
		JEWEL_3,
		JEWEL_4,
		JEWEL_5,
		JEWEL_6,
		RING1,
		RING2,
		RING3,
		RING_UNIQ1,
		RING_UNIQ2,
		RING_UNIQ3,
		TPSCROLL,
		IDSCROLL,
		ANNIHILUS,
		WORLDSTONE_SHARD,
		ELRUNE,
		ELDRUNE,
		TIRRUNE,
		NEFRUNE,
		ETHRUNE,
		ITHRUNE,
		TALRUNE,
		RALRUNE,
		ORTRUNE,
		THULRUNE,
		AMNRUNE,
		SOLRUNE,
		SHAELRUNE,
		DOLRUNE,
		HELRUNE,
		IORUNE,
		LUMRUNE,
		KORUNE,
		FALRUNE,
		LEMRUNE,
		PULRUNE,
		UMRUNE,
		MALRUNE,
		ISTRUNE,
		GULRUNE,
		VEXRUNE,
		OHMRUNE,
		LORUNE,
		SURRUNE,
		BERRUNE,
		JAHRUNE,
		CHAMRUNE,
		ZODRUNE,
		MAX_ITEMS
	};
}

namespace ITEMRARITY
{
	enum RARITY
	{
		GOLD,			// 0
		NORMAL,			// 1
		MAGIC,			// 2
		RARE,			// 3
		SET,			// 4
		UNIQUE,			// 5
		RUNE,			// 6
		MAX_RARITIES	// 7
	};
}

namespace PARTICLE
{
	inline float ANIMSTEP = 2.0f;
}